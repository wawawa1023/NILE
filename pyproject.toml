[project]
name = "nile"
version = "0.2.0"
description = "NeuroSymbolic Interactive Language Engine - Enhanced Japanese NLP and Symbolic Reasoning"
authors = [
    {name = "NILE Development Team", email = "nile@example.com"}
]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "spacy>=3.6.0",
    "ja-ginza>=5.1.0",
    "fastapi>=0.100.0",
    "pydantic>=2.0.0",
    "redis>=4.5.0",
    "networkx>=3.1.0",
    "plotly>=5.15.0",
    "streamlit>=1.25.0",
    "python-dotenv>=1.0.0",
    "sympy>=1.12",
    "protobuf>=6.31.0",
    "fugashi>=1.4.0",
    "pytest>=7.4.0",
    "black>=23.0.0",
    "mypy>=1.5.0"
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
keywords = ["nlp", "japanese", "reasoning", "ai", "symbolic", "knowledge-graph"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic"
]

[project.urls]
Homepage = "https://github.com/your-org/nile"
Documentation = "https://nile.readthedocs.io"
Repository = "https://github.com/your-org/nile.git"
Issues = "https://github.com/your-org/nile/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "isort>=5.12.0"
]
web = [
    "streamlit>=1.25.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0"
]
gpu = [
    "torch[cuda]>=2.0.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["nile"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["nile/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["nile"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
] 